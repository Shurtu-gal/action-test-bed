name: Test Workflow

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get PR authors
        id: authors
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Get paginated list of all commits in the PR
            try {
              const commitOpts = github.rest.pulls.listCommits.endpoint.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number
              });

              const commits = await github.paginate(commitOpts);
              return commits;
            } catch (error) {
              core.setFailed(error.message);
              return [];
            }

      - name: Create commit message
        id: create-commit-message
        uses: actions/github-script@v7
        with:
          script: |
            const commits = ${{ steps.authors.outputs.result }};

            // Get unique authors from the commits list
            const authors = commits.reduce((acc, commit) => {
              const username = commit.author?.login || commit.commit.author?.name;
              if (username && !acc[username]) {
                acc[username] = {
                  name: commit.commit.author?.name,
                  email: commit.commit.author?.email,
                }
              }

              return acc;
            }, {});

            // Create a string of the form "Co-authored-by: Name <email>"
            // ref: https://docs.github.com/en/pull-requests/committing-changes-to-your-project/creating-and-editing-commits/creating-a-commit-with-multiple-authors
            const coAuthors = Object.values(authors).map(author => {
              return `Co-authored-by: ${author.name} <${author.email}>`;
            }).join('\n');

            console.log(coAuthors);
